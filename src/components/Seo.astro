---
export interface Props {
  title: string;
  description?: string;
  canonical?: string;
  openGraph?: {
    title: string;
    description: string;
    image: string;
    url: string;
    type: 'website' | 'article' | 'profile';
  };
  schema?: any; // JSON-LD opcional
  lang?: 'de-DE' | 'es-ES';
}

const {
  title,
  description = 'Ihre digitale Präsenz, gebaut auf Präzision, Zugänglichkeit und deutschem Ingenieurwesen.',
  canonical,
  openGraph,
  schema,
  lang = 'de-DE',
} = Astro.props;

const BASE_URL = Astro.site || 'https://www.techhilfepro.de';
const currentUrl = new URL(Astro.url.pathname, BASE_URL).href;
const finalCanonical = canonical || currentUrl;

// Default OpenGraph data
const og = {
  title: openGraph?.title || title,
  description: openGraph?.description || description,
  type: openGraph?.type || 'website',
  image: openGraph?.image || `${BASE_URL}/og-image.jpg`,
  url: openGraph?.url || currentUrl,
  locale: lang === 'de-DE' ? 'de_DE' : 'es_ES',
};

// Hreflang setup
const hreflangs = [
  { href: currentUrl.replace('/es/', '/de/'), hreflang: 'de-DE' },
  { href: currentUrl.replace('/de/', '/es/'), hreflang: 'es-ES' },
  { href: currentUrl, hreflang: 'x-default' },
];
---

<head>
  <title>{title}</title>
  <meta name="description" content={description} />
  <link rel="canonical" href={finalCanonical} />

  <!-- Open Graph -->
  <meta property="og:title" content={og.title} />
  <meta property="og:description" content={og.description} />
  <meta property="og:type" content={og.type} />
  <meta property="og:image" content={og.image} />
  <meta property="og:url" content={og.url} />
  <meta property="og:locale" content={og.locale} />

  <!-- Hreflang alternates -->
  {hreflangs.map((h) => (
    <link rel="alternate" href={h.href} hreflang={h.hreflang} />
  ))}

  <!-- Theme color -->
  <meta name="theme-color" content="#003366" />

  <!-- JSON-LD Schema (si existe) -->
  {schema && (
    <script type="application/ld+json" set:html={JSON.stringify(schema)} />
  )}
</head>
